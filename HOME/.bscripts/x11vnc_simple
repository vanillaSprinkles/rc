#!/usr/bin/env bash


UNSET_PASSWORD=p@ssw0rd



_help() {
    cat <<EOF
  - passwords may not start with a -
  - password is first non-defined argument (the 2 below) (unless -pw is used)
    any remaining arguments get passed to x11vnc
  - defined optional args (yes regex):
    -d(isplay)?  :#
    -pw?|passwd|password  <string>

  ## default embedded arguments:
    -passwd "${_args_mod[0]:-${UNSET_PASSWORD}}"
    ${_DEF_ARGS[@]} -auth \${XAUTHORITY}

  examples:
    ${0##*/} ${UNSET_PASSWORD}  ## x11vnc with password ${UNSET_PASSWORD}
    ${0##*/} ${UNSET_PASSWORD}  -d :1
    ${0##*/} -d :1 ${UNSET_PASSWORD}
    ${0##*/} -pw ${UNSET_PASSWORD}  -d :1
EOF
    exit
}





_DEF_ARGS=(
    -q  ## quiet

    -forever
    -loop

    -nonc  ## Client-side  caching  scheme (disabled with nonc)

    -speeds ,,1  

    -snapfb  ## could cause issues (most times makes response times worse)
    -wait 5  ## default: 20  ## time in ms to pause between screen polls
    -nowait_bog  ## do ot detect if screen-polling is "bogged down" and sleep more
    
    -defer 0  ## time in ms to delay sending updates to connected clients (default: 20)
    -deferupdate 0  ## time in ms to defer updates (default: 40)

    -wait_ui 5   ## maybe disable
    -setdefer -2

    -noxdamage  ## pulling smaller areas ("use -xdamage if your default is to have it off" ?? wtf)

    -repeat     ## ey input repeat
    -skip_dups  ## key repeat-event like N key-down in a row (just use 1 key down event)
    -scr_keyrepeat  1-100  ## default: 4-20
    -skip_lockkeys  ## also use nomodtweak for workarounds

    # -nomodtweak  ## '<' failed to send?
    -modtweak
    # -noxkb  ## shift n failed to send
    -xkb

    #-nonap

    -auth guess
)


if [[ "x${XAUTHORITY}" != "x" ]]; then
    _DEF_ARGS+=( -auth "${XAUTHORITY}" )
fi





_args_mod=()
_args_orig=( "$@" )

_arg_pass=''
_arg_display=''

for (( i=0; i<${#_args_orig[@]}; i++ )); do
    shift  ## remove processed arg from existance
    _aarg="${_args_orig[$i]}"


    ## -help  ## give help and break out
    if [[ "${_aarg}" =~ ^-+h(elp)?$ ]]; then
        _help
        break


    ## -display :#  ## display-number
    elif [[ "${_aarg}" =~ ^-+d(isplay)?$ ]]; then
        ((i++))
        _arg_display="${_args_orig[$i]}"
    elif [[ "${_aarg}" =~ ^-+d(isplay)?=.+$ ]]; then
        _position_greedy_equal_location=".${_aarg%=*}" # 'extra' dot index acts as itr++
        _substring_length="${#_position_greedy_equal_location}"
        _arg_display="${_aarg:${_substring_length}}"


    ## -pw  ## passwd  ## password
    elif [[ "${_aarg}" =~ ^-+(pw?|passwd|password)$ ]]; then
        ((i++))
        _arg_pass="${_args_orig[$i]}"
    elif [[ "${_aarg}" =~ ^-+(pw?|passwd|password)=.+$ ]]; then
        _position_greedy_equal_location=".${_aarg%=*}" # 'extra' dot index acts as itr++
        _substring_length="${#_position_greedy_equal_location}"
        _arg_pass="${_aarg:${_substring_length}}"

   
    else
        _args_mod+=( "${_aarg}" )
    fi
done





if [[ -n "${_arg_display}" ]]; then
    _args_mod+=( '-display' "${_arg_display}" )
fi

if [[ -n "${_arg_pass}" ]]; then
    _args_mod=( "${_arg_pass}"  "${_args_mod[@]}" )
elif [[ "${_args_mod[0]:0:1}" == '-' ]]; then
    ## set default pass to $UNSET_PASSWORD when no password is set, and flag/arguments exist
    _args_mod=( "${UNSET_PASSWORD}"  "${_args_mod[@]}" )
fi





killer() {
    kill -${1:-TERM} -- 0
}





trap 'trap - HUP INT QUIT ABRT TERM; killer; kill -TERM -- 0 ' HUP INT QUIT ABRT TERM #EXIT ERR
x11vnc -passwd "${_args_mod[0]:-${UNSET_PASSWORD}}"  "${_DEF_ARGS[@]}"   "${_args_mod[@]:1}" & x11vnc_pid=$!


echo "x11vnc pid: ${x11vnc_pid}"
wait $x11vnc_pid
