#!/bin/bash

#### gets HDMI connected, exit if not
hdmiConnected=($(xrandr -q | awk '$1 ~ /^HDMI/ && $2 ~ /^connected$/' ))
[[ ${#hdmiConnected[@]} -le 0 ]] &&  exit



role="r_main_back"
name="termite_back"  # def $0
trans="0.35"
#trans="0.43"
#  xrandr -q |  $(which grep) -Eos "HDMI.*[0-9]{1,5}x[0-9]{1,5}" | cut -d' ' -f3   =>  1920x1200
geom="1919x1198"
place="+1366+1"
termite_trans=0



#### get res of hdmi and auto-sets 'geom'
hdmiRez=$(xrandr -q |  $(which grep) -Eos "HDMI.*[0-9]{1,5}x[0-9]{1,5}" | cut -d' ' -f3)
hdmiRezX=$( echo $hdmiRez | cut -d'x' -f1)
hdmiRezY=$( echo $hdmiRez | cut -d'x' -f2)
geom="$((hdmiRezX-1))x$((hdmiRezY-2))"




#### if ${role} already open ####
wids=()
for wid in $(wmctrl -lp | awk '{print $1}'); do 
    roles=$(xprop -id $wid WM_WINDOW_ROLE _OB_APP_ROLE | cut -d'"' -f2 | $(which grep) -E "^${role}\$" )
    if [[ -n $roles ]]; then
	wids+=("${wid}")
	echo $wid
    fi
 done
if [[ ${#wids[@]} -gt 0 ]]; then
   [[ $termite_trans == 1 ]] &&  transset-df -i ${wids[0]}  $trans
   [[ $termite_trans == 0 ]] &&  transset-df -i ${wids[0]}  .8
   wmctrl -i -r ${wids[0]} -b remove,above,hidden
   wmctrl -i -r ${wids[0]} -b add,below
   wmctrl -i -r ${wids[0]} -b add,undecorated
   wmctrl -i -r ${wids[0]} -b add,shaded,skip_pager
   xdotool set_desktop_for_window ${wids[0]} -1
   ##wmctrl -i -r ${wids[0]} -t -1
   wmctrl -i -r ${wids[0]} -N ${name}

   ## get  absolute max resolution
   arez=($(xrandr -q | $(which grep) -Eo "current [0-9]* x [0-9]*" | $(which grep) -Eo "[0-9]*"))
   ## abs X pos
   if [[ "$(echo $place | $(which grep) -Eo "^[-|+]")" == "+" ]]; then
       ax=$(echo $place | $(which grep) -Eo "^[-|+][0-9]*")
   else
       ax=$(( ${arez[0]} - ${geom//x*}  $(echo $place | $(which grep) -Eo "^[-|+][0-9]*") ))
   fi
   ## abs Y pos
   if [[ "$(echo $place | $(which grep) -Eo "[-|+][0-9]+$" | $(which grep) -Eo "[-|+]")" == "+" ]]; then
       ay=$(echo $place | $(which grep) -Eo "[-|+][0-9]+$")
       ay=${ay//*+}
   else
       ay=$(( ${arez[1]} - ${geom//*x}  $(echo $place | $(which grep) -Eo "^[-|+][0-9]*") ))
   fi
   
   wmctrl -i -r ${wids[0]} -e 0,${ax},${ay},${geom/x/,}
   exit
fi
#### end if ${role} already open ####



#### launch termite ####
if [[ $termite_trans == 1 ]]; then
    termite --display=:0 --role=${role} --geometry=${geom}${place}   & #--hold &
else
    termite --display=:0 --role=${role} --geometry=${geom}${place} -c ${XDG_CONFIG_HOME}/termite/config_back   & #--hold &
fi
#termite --display=:0 --role=${role}  --geometry=920x200+1366+0 &

#sz_widL=0
#while [[ $sz_widL == 0 ]]; do
    widList=($(wmctrl -lp | awk '{print $1}'))
#    sz_widL=${#widList[@]}
#done
sleep .2s

#### window effects ####
# for wid in $(wmctrl -lp | awk '{print $1}'); do xprop -id $wid | grep YAY && echo $wid; done

for wid in $(wmctrl -lp | awk '{print $1}'); do   ##${widList[@]}; do   #   $(wmctrl -lp | awk '{print $1}'); do 
    sleep .1s
    roles=$(xprop -id $wid  WM_WINDOW_ROLE  _OB_APP_ROLE | $(which grep) ${role} )
    if [[ -n $roles ]]; then
	[[ $termite_trans == 1 ]] &&  transset-df -i $wid  $trans
	[[ $termite_trans == 0 ]] &&  transset-df -i $wid  .8
#	wmctrl -i -r $wid -b remove,fullscreen
	wmctrl -i -r $wid -b add,below #,maximized_vert
	wmctrl -i -r $wid -b add,undecorated #,maximized_horz
	wmctrl -i -r $wid -b add,shaded,skip_pager
#skip_taskbar => alt-tab
#	wmctrl -i -r $wid -b remove,skip_pager
	xdotool set_desktop_for_window $wid -1
	##wmctrl -i -r $wid -t -1
#	wmctrl -i -r $wid -b add,modal
#	wmctrl -i -r $wid -b add,sticky
# all desktop
# no iconic

## set the WM title name: 
# xprop -id 0x1800003 _OB_APP_TITLE _NET_WM_VISIBLE_NAME WM_NAME _NET_WM_NAME

	wmctrl -i -r $wid -N ${name}

    fi
done
