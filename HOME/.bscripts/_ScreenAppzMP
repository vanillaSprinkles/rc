#!/bin/bash

#if [ "${i}" == "" ]; then
#    echo "Usage: .ScreenZ.sh {root|irssi|ncdc|wweather}" >&2
#    exit
#fi



#echo -e " $CLR_GREEN 033[0;31m $R '$1' '$2' $CR_RED $HOME  $CR_GREEN green "

# forever prompt user to login as root
ReD='\033[0;31m'
GrN='\033[0;32m'
DeF='\033[0m'

if [[ "${1,,}" =~ (-*help)|(-|/)*\? ]]; then
  S="  "
  APP="${0##\/*/}"
cat << EOF
Usage:
${S}${APP} [FILLER] EXEC-APP [EXEC-APP-OPTIONS...]  ([FILLER] EXEC-APP [EXEC-APP-OPTIONS...])...
${S}Continually start one or multiple-consecutive apps inside screen/tmux.

FILLER:
${S}Delimiter string between mulitple EXEC-APP and EXEC-APP-OPTIONS.
${S}This argument is required unless calling a single-app with no EXEC-APP-OPTIONS.

EXEC-APP:
${S}The app to start.

EXEC-APP-OPTIONS:
${S}The arguments to pass to the app to start.

Help Options:
${S}-?, --help                  Show this help (only if first argument!)

Examples:
${S}${APP} _A ssh host -L 0.0.0.0:80:127.0.0.1:80
${S}${APP} irssi
${S}${APP} \; date \; sleep 10s \; traceroute 127.0.0.1
EOF
  exit
fi

#echo "_A ssh vs -L 192.168.1.9:9050:127.0.0.1:9050 _A ssh iv" | sed -r 's/ *_A */\n/g'
oIFS=$IFS
IFS=$'\n'
CMD_ar=($(echo "${@}" | sed -r 's/^'$1' +//g;s/ *'$1' +/\n/g'))
IFS=$oIFS
CMD_sz=${#CMD_ar[@]}

while [ 1 ]; do
for ((i=0; i<$CMD_sz; i++)); do
  CMD=$(echo "${CMD_ar[$i]}" | awk '{print $1}')
  ARGS=$(echo "${CMD_ar[$i]}" | sed -r 's/^'$CMD' *(.*)/\1/g')
eval $CMD $ARGS
done
echo -e ">> running again in 5s <<\n" >&2
sleep 5s
done


exit










for i
do

  case "$i" in

  root)
  #if [ "${i}" == "root" ]; then
    ROOTCNT=2
    echo -e "$ReD""Enter the root password!\033[0m"
    su - root;
    while [ $ROOTCNT ]; do 
	      echo -e "$GrN""Go #$ROOTCNT""$ReD"" Enter the real root pass:""$DeF"
	      su - root; 
	      let ROOTCNT++;
    done
  #fi
  ;;

  irssi)
  #if [ "${i}" == "irssi" ]; then
    while [ 1 ]; do 
        PWD="${HOME}/.irssi"
	      /usr/bin/irssi
	      #sleep 5s 
	      ping -c 5 127.0.0.1 > /dev/null
    done
  #fi
  ;;


  ncdc)
  #if [ "${i}" == "ncdc" ]; then
    while [ 1 ]; do 
        PWD="${HOME}/.ncdc"
	      /usr/bin/ncdc
	      #sleep 5s 
	      ping -c 5 127.0.0.1 > /dev/null
    done
  #fi
  ;;


  wweather)
  #if [ "${i}" == "wweather" ]; then
    while [ 1 ]; do
        PWD="${HOME}/cliweather-ad0aa95"
        clear
        echo "Home: "
        ./cliweather 95472
        echo -e "\nSR: "
        ./cliweather 95403
        sleep 30s
    done
  #fi
  ;;

  
  WM)
  #if [ "${i}" == "WM" ]; then
    while [ 1 ]; do
	WMFILE="/tmp/bscripts/${USER}-WM.tmp"
        if [[ -f $WMFILE ]]; then
	    echo -e "executing $(cat $WMFILE) with user ${USER} in 'tty' mode via ssh -tt:"

#	    ssh -tt localhost "source ${HOME}/.bash_profile && ${HOME}/.bscripts/x $(cat ${WMFILE} )"
#sleep 1000s
	    ${HOME}/.bscripts/x $(cat $WMFILE)

	else 
	    echo "no file $WMFILE"
	    exit
	fi
        clear
        sleep 7s
    done
  #fi
  ;;

  
  synergyc)
  #if [ "${i}" == "synergyc" ]; then
    while [ 1 ]; do
        if [[ -f  ${HOME}/.config/bscripts/WM.${HOSTNAME}.synergyc ]]; then
	    CFG=( $(cat ~/.config/bscripts/WM.${HOSTNAME}.synergyc) )
	    IP=${CFG[0]}
	    DBG=${CFG[1]}
	    [[ -z $DBG ]] && DBG="NOTE"
            echo -en "synergyc -f -d $DBG $IP\n\n"
            for id in $(pgrep synergyc); do kill -9 $id; done
	    synergyc -f -d $DBG $IP
	    ## ERROR WARNING NOTE INFO DEBUG DEBUG1 DEBUG2
	else 
	    echo "no file ${HOME}/.config/bscritps/WM.${HOSTNAME}.synergyc"
	    echo "  generate with: WM setsynergyc <ip> <debug-level>"
#	    exit
	fi
        clear
        sleep 2s
    done
  #fi
  ;;


  xcompmgr|transset)
  #if [ "${i}" == "xcompmgr" ] || [ "${i}" == "transset" ]; then
#    if (( 1 -lt $(pgrep "^e16$") )); then
#	exit
#    fi
    mkdir -p /tmp/bscripts
    echo 1 > /tmp/bscripts/screenAppz.xcompmgr
    while [ 1 ]; do
        for id in $(pgrep ${i}); do kill -9 $id; done
        if [ $(cat /tmp/bscripts/screenAppz.xcompmgr 2> /dev/null) ]; then
            if [ "$(xcompmgr -c -d :0 2>&1)" == "Can't open display" ]; then
		sleep 2s
	    fi
	else
            sleep 2s
        fi
    done
  #fi
  ;;


  devilspie)
  #if [ "${i}" == "devilspie" ]; then

    while [ 1 ]; do
        for id in $(pgrep ${i}); do kill -9 $id; done
	DISPLAY=":0"
	export DISPLAY
	devilspie -a
	sleep 2s
	echo -e "\n\n\n"
    done
  #fi
    ;;


 

#LINES=`ps aux | grep "${USER}" | grep 'irssi'`
#printf "%s\n" "${LINES[1]}"


  *)
    echo nope
    sleep 2s
  ;;

  esac

done



